{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asade\\\\Desktop\\\\Backup\\\\FinancialAdvisorApp-UI\\\\src\\\\App\\\\APIAccountAdvisor.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nclass APIAccountAdvisor extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  // Now we're going to make a request for data using axios\n  getPosts() {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHAiOiJkZW1vLWFwcC1lYTE3MzJkNS1jMjAyLTQ0OGEtYmM0OC1mNzhlOGRlM2Y3OTkiLCJvcmciOiJlYTE3MzJkNS1jMjAyLTQ0OGEtYmM0OC1mNzhlOGRlM2Y3OTkuZXhhbXBsZS5vcmciLCJpc3MiOiJuYXR3ZXN0LnVzZWluZmluaXRlLmlvIiwidG9rZW5fdHlwZSI6IkFDQ0VTU19UT0tFTiIsImV4dGVybmFsX2NsaWVudF9pZCI6Ink0cGJkdU1sTG1KZjZ2S1l3b1pTQWhDMXJlcy13WnBoSlV2bFBjX2hOcmM9IiwiY2xpZW50X2lkIjoiMWMxODY2YzctZjFiMi00MGZkLWEzMGUtNmZkOTlkOTVhZGIwIiwibWF4X2FnZSI6ODY0MDAsImF1ZCI6IjFjMTg2NmM3LWYxYjItNDBmZC1hMzBlLTZmZDk5ZDk1YWRiMCIsInVzZXJfaWQiOiIxMjM0NTY3ODkwMTJAZWExNzMyZDUtYzIwMi00NDhhLWJjNDgtZjc4ZThkZTNmNzk5LmV4YW1wbGUub3JnIiwiZ3JhbnRfaWQiOiIxN2Q4NzMzNi1lNDBmLTRhYzYtODA5Yi0zNGUyNjY0ZjhmNjciLCJzY29wZSI6ImFjY291bnRzIG9wZW5pZCIsImNvbnNlbnRfcmVmZXJlbmNlIjoiOTAxYTRkMjEtOWRhNy00MmMyLThhNmItOWU5N2U3Zjg0ZDI2IiwiZXhwIjoxNTk1MDc2MTc2LCJpYXQiOjE1OTUwNzU4NzYsImp0aSI6IjUwNzY0ZGIzLWQzYjUtNDhjOC1iMDFmLWM4MThmYzNiZjg3NCIsInRlbmFudCI6Ik5hdFdlc3QifQ.EOpn6RrC8-2GItBEvOvIDtcSA7mpay319KSJONa898JVOzYbNBdK9p2QM6-8K2j2T0za0XJh60Fvpyk2QQVz9G8G9UWwBGhAPkYUXpKARVHMVrAiCJ62L29IdLwyWK8UibP7yMRAAkwMT0iHaqIztq6_Cvjul3bV1V1TUKt3RHIcDVte_g2kSIDxCHtSWGtj2-3W-v9DTg03gW8ffBx-ytTmCv6WO33C80_YhtiQcAPH4sPI0s98h6QJKBsBN1oFcdeWLXiN-8NWsmzyGLnAz01_v0_jtFTK3qamGEPLf7Xv0nze4Z0O8mN8rNCZArR1kcrq8bB3ItTFl2e8wD_V4w\"\n      }\n    };\n    axios // This is where the data is hosted\n    .get(\"http://localhost:8080/open-banking/v3.1/aisp/accounts/3e82c5e6-3d02-4dd9-a69b-cc6629734c2d/balances\", requestOptions) // Once we get a response and store data, let's change the loading state\n    .then(response => {\n      this.setState({\n        //posts: response.data.posts,\n        posts: response.data.Data.Balance,\n        isLoading: false\n      });\n    }) // If we catch any errors connecting, let's update accordingly\n    .catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  } // Let's our app know we're ready to render the data\n\n\n  componentDidMount() {\n    this.getPosts();\n  } // Putting that data to use\n\n\n  render() {\n    const {\n      isLoading,\n      posts\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"API Financial Account Advisor\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, !isLoading ? posts.map(post => {\n      const {\n        CreditDebitIndicator,\n        Amount\n      } = post;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, \"Credit :\", CreditDebitIndicator), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, \"Amount : \", Amount.Amount), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }));\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"Loading...\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fixed-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"Always the Trust advisor for all your financial needs!\")));\n  }\n\n}\n\nexport { APIAccountAdvisor };","map":{"version":3,"sources":["C:/Users/asade/Desktop/Backup/FinancialAdvisorApp-UI/src/App/APIAccountAdvisor.jsx"],"names":["React","axios","APIAccountAdvisor","Component","state","posts","isLoading","errors","getPosts","requestOptions","method","headers","Authorization","get","then","response","setState","data","Data","Balance","catch","error","componentDidMount","render","map","post","CreditDebitIndicator","Amount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAN,SAAgCF,KAAK,CAACG,SAAtC,CAAgD;AAAA;AAAA;AAAA,SAC9CC,KAD8C,GACtC;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADsC;AAAA;;AAM9C;AACAC,EAAAA,QAAQ,GAAG;AACT,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EACX;AAFK;AAFY,KAAvB;AAOAX,IAAAA,KAAK,CACH;AADG,KAEFY,GAFH,CAGI,qGAHJ,EAIIJ,cAJJ,EAME;AANF,KAOGK,IAPH,CAOSC,QAAD,IAAc;AAClB,WAAKC,QAAL,CAAc;AACZ;AACAX,QAAAA,KAAK,EAAEU,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBC,OAFd;AAGZb,QAAAA,SAAS,EAAE;AAHC,OAAd;AAKD,KAbH,EAcE;AAdF,KAeGc,KAfH,CAeUC,KAAD,IAAW,KAAKL,QAAL,CAAc;AAAEK,MAAAA,KAAF;AAASf,MAAAA,SAAS,EAAE;AAApB,KAAd,CAfpB;AAgBD,GA/B6C,CAgC9C;;;AACAgB,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,QAAL;AACD,GAnC6C,CAoC9C;;;AACAe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,SAAF;AAAaD,MAAAA;AAAb,QAAuB,KAAKD,KAAlC;AACA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACE,SAAD,GACCD,KAAK,CAACmB,GAAN,CAAWC,IAAD,IAAU;AAClB,YAAM;AAAEC,QAAAA,oBAAF;AAAwBC,QAAAA;AAAxB,UAAmCF,IAAzC;AACA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAaC,oBAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAcC,MAAM,CAACA,MAArB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD,KATD,CADD,gBAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,CAHF,eAmBE;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAnBF,CADF,CADF;AA2BD;;AAlE6C;;AAqEhD,SAASzB,iBAAT","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nclass APIAccountAdvisor extends React.Component {\n  state = {\n    posts: [],\n    isLoading: true,\n    errors: null,\n  };\n  // Now we're going to make a request for data using axios\n  getPosts() {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        Authorization:\n          \"Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHAiOiJkZW1vLWFwcC1lYTE3MzJkNS1jMjAyLTQ0OGEtYmM0OC1mNzhlOGRlM2Y3OTkiLCJvcmciOiJlYTE3MzJkNS1jMjAyLTQ0OGEtYmM0OC1mNzhlOGRlM2Y3OTkuZXhhbXBsZS5vcmciLCJpc3MiOiJuYXR3ZXN0LnVzZWluZmluaXRlLmlvIiwidG9rZW5fdHlwZSI6IkFDQ0VTU19UT0tFTiIsImV4dGVybmFsX2NsaWVudF9pZCI6Ink0cGJkdU1sTG1KZjZ2S1l3b1pTQWhDMXJlcy13WnBoSlV2bFBjX2hOcmM9IiwiY2xpZW50X2lkIjoiMWMxODY2YzctZjFiMi00MGZkLWEzMGUtNmZkOTlkOTVhZGIwIiwibWF4X2FnZSI6ODY0MDAsImF1ZCI6IjFjMTg2NmM3LWYxYjItNDBmZC1hMzBlLTZmZDk5ZDk1YWRiMCIsInVzZXJfaWQiOiIxMjM0NTY3ODkwMTJAZWExNzMyZDUtYzIwMi00NDhhLWJjNDgtZjc4ZThkZTNmNzk5LmV4YW1wbGUub3JnIiwiZ3JhbnRfaWQiOiIxN2Q4NzMzNi1lNDBmLTRhYzYtODA5Yi0zNGUyNjY0ZjhmNjciLCJzY29wZSI6ImFjY291bnRzIG9wZW5pZCIsImNvbnNlbnRfcmVmZXJlbmNlIjoiOTAxYTRkMjEtOWRhNy00MmMyLThhNmItOWU5N2U3Zjg0ZDI2IiwiZXhwIjoxNTk1MDc2MTc2LCJpYXQiOjE1OTUwNzU4NzYsImp0aSI6IjUwNzY0ZGIzLWQzYjUtNDhjOC1iMDFmLWM4MThmYzNiZjg3NCIsInRlbmFudCI6Ik5hdFdlc3QifQ.EOpn6RrC8-2GItBEvOvIDtcSA7mpay319KSJONa898JVOzYbNBdK9p2QM6-8K2j2T0za0XJh60Fvpyk2QQVz9G8G9UWwBGhAPkYUXpKARVHMVrAiCJ62L29IdLwyWK8UibP7yMRAAkwMT0iHaqIztq6_Cvjul3bV1V1TUKt3RHIcDVte_g2kSIDxCHtSWGtj2-3W-v9DTg03gW8ffBx-ytTmCv6WO33C80_YhtiQcAPH4sPI0s98h6QJKBsBN1oFcdeWLXiN-8NWsmzyGLnAz01_v0_jtFTK3qamGEPLf7Xv0nze4Z0O8mN8rNCZArR1kcrq8bB3ItTFl2e8wD_V4w\",\n      },\n    };\n    axios\n      // This is where the data is hosted\n      .get(\n        \"http://localhost:8080/open-banking/v3.1/aisp/accounts/3e82c5e6-3d02-4dd9-a69b-cc6629734c2d/balances\",\n        requestOptions\n      )\n      // Once we get a response and store data, let's change the loading state\n      .then((response) => {\n        this.setState({\n          //posts: response.data.posts,\n          posts: response.data.Data.Balance,\n          isLoading: false,\n        });\n      })\n      // If we catch any errors connecting, let's update accordingly\n      .catch((error) => this.setState({ error, isLoading: false }));\n  }\n  // Let's our app know we're ready to render the data\n  componentDidMount() {\n    this.getPosts();\n  }\n  // Putting that data to use\n  render() {\n    const { isLoading, posts } = this.state;\n    return (\n      <React.Fragment>\n        <div class=\"card\">\n          <div class=\"card-header\">API Financial Account Advisor</div>\n\n          <div>\n            {!isLoading ? (\n              posts.map((post) => {\n                const { CreditDebitIndicator, Amount } = post;\n                return (\n                  <div>\n                    <h2>Credit :{CreditDebitIndicator}</h2>\n                    <h2>Amount : {Amount.Amount}</h2>\n                    <hr />\n                  </div>\n                );\n              })\n            ) : (\n              <p>Loading...</p>\n            )}\n          </div>\n          <div class=\"fixed-bottom\">\n            Always the Trust advisor for all your financial needs!\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport { APIAccountAdvisor };\n"]},"metadata":{},"sourceType":"module"}